---
title: "Savage DataSet DESeq2"
---

```{r}

###Be sure you set your working directory to one specific location: ex. Desktop[]

library(DESeq2)
library(tidyverse)
#read in data and clean
savagecount<-read.table("18-5-24_dedup_Savage_deseq_counts.txt", header=TRUE)
rownames(savagecount) <- savagecount$gene
savagecount<-subset(savagecount, select=c(2:11))
head(savagecount)
```

```{r}
###build design matrix w/ treatments and replicates

#design
design<-data.frame(stage=as.factor(c(rep("MG", 3), rep("PV", 4), rep("SA", 3))),rep=as.factor(c(1,2,3,1,2,3,4,1,2,3)))

#create DESeqDataSet Object
ddsSavageCountTable <- DESeqDataSetFromMatrix(
  countData = savagecount,
  colData = design,
  design = ~ stage + rep)

#run DESeq2
savdds<-DESeq(ddsSavageCountTable)
savresults<-results(savdds, contrast = "stage")
mcols(savresults)
```

```{r}
#Run DESeq2 Pipeline and compile results

#run DESeq2
savdds<-DESeq(ddsSavageCountTable)

#Results
savresults<-results(savdds, contrast = c("stage", "SA", "MG"))
#just get the significant ones (padj<0.01)
resSig<- savresults[ which(savresults$padj < 0.01 ), ]
#order by logfc and look at data
head( resSig[ order( resSig$log2FoldChange ), ] )


#MA plot
plotMA( savresults, ylim = c(-3, 3) )

#plot dispersions
plotDispEsts( savdds, ylim = c(1e-6, 1e1) )

#plot p-values
hist( savresults$pvalue, breaks=20, col="grey" )


#Let's get some actual gene names!
#write out resSig so we can provide to geneID Retriever
#https://tritrypdb.org/tritrypdb/showQuestion.do?questionFullName=GeneQuestions.GeneByLocusTag

file_to_write<-paste(rownames(resSig), collapse="\t")
write.table(file_to_write, file="SAMGsavresSig")

#be sure to manipulate the text (leave out vector index and quotes). Can do this manually or use unix commands. I did this manually

#select your genes and column identifiers and export as .csv
genenames<-read.csv("GeneByLocusTag_Summary.csv")

```



